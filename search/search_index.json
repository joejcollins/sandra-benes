{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"sandra_benes documentation! Commands The Makefile contains the central entry points for common tasks related to this project. trigger","title":"Home"},{"location":"#sandra_benes-documentation","text":"","title":"sandra_benes documentation!"},{"location":"#commands","text":"The Makefile contains the central entry points for common tasks related to this project. trigger","title":"Commands"},{"location":"etl/","text":"ETL Pipeline crawl > normalize > chunk > embed > index Extraction Gathering into raw . I am going to skip this step. Actually it can be pretty complicated especially for webpages. Getting the page to execute with Parsing/Normalisation Converting into \"standard\" ready for database into processed in our case get the other data from the file (filename) where does the chunking go? Does the embedding happen here too?","title":"ETL Pipeline"},{"location":"etl/#etl-pipeline","text":"crawl > normalize > chunk > embed > index","title":"ETL Pipeline"},{"location":"etl/#extraction","text":"Gathering into raw . I am going to skip this step. Actually it can be pretty complicated especially for webpages. Getting the page to execute with","title":"Extraction"},{"location":"etl/#parsingnormalisation","text":"Converting into \"standard\" ready for database into processed in our case get the other data from the file (filename) where does the chunking go? Does the embedding happen here too?","title":"Parsing/Normalisation"},{"location":"getting_started/","text":"Getting started Describe how to get set up on a clean install, including the commands necessary to get the raw data (using the sync_data_from_s3 command, for example), and then how to make the cleaned, final data sets. Makefile","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"Describe how to get set up on a clean install, including the commands necessary to get the raw data (using the sync_data_from_s3 command, for example), and then how to make the cleaned, final data sets. Makefile","title":"Getting started"},{"location":"api/helpers/","text":"Helpers File finder service. FileFinderService Find a file upwards from a starting directory. __init__ ( isfile = path . isfile , abspath = path . abspath , glob = glob . glob ) Initialise the file finder service. Use dependency injection so that we can pass in mock items for testing. Under normal use the default \"normal\" values are used. find_file_upwards ( filename , start_directory = '.' ) Find a file upwards from a starting directory. find_root ( start_directory = '.' ) Find the root of the project. Assuming that the pyproject.toml is in the root of the application.","title":"Helpers"},{"location":"api/helpers/#helpers","text":"File finder service.","title":"Helpers"},{"location":"api/helpers/#sandra_benes.helpers.file_finder_service.FileFinderService","text":"Find a file upwards from a starting directory.","title":"FileFinderService"},{"location":"api/helpers/#sandra_benes.helpers.file_finder_service.FileFinderService.__init__","text":"Initialise the file finder service. Use dependency injection so that we can pass in mock items for testing. Under normal use the default \"normal\" values are used.","title":"__init__"},{"location":"api/helpers/#sandra_benes.helpers.file_finder_service.FileFinderService.find_file_upwards","text":"Find a file upwards from a starting directory.","title":"find_file_upwards"},{"location":"api/helpers/#sandra_benes.helpers.file_finder_service.FileFinderService.find_root","text":"Find the root of the project. Assuming that the pyproject.toml is in the root of the application.","title":"find_root"}]}